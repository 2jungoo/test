#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>
#include <unistd.h>

long calculate_dir_size(char *dirname, int show_subdirs);

long calculate_dir_size(char *dirname, int show_subdirs) {
    DIR *dp;
    struct dirent *dentry;
    struct stat statbuf;
    long total_size = 0;
    char path[1024];
    
    if ((dp = opendir(dirname)) == NULL) {
        perror(dirname);
        return 0;
    }
    
    while ((dentry = readdir(dp)) != NULL) {
        // . 과 .. 제외
        if (strcmp(dentry->d_name, ".") == 0 || strcmp(dentry->d_name, "..") == 0)
            continue;
        
        // 전체 경로 생성
        snprintf(path, sizeof(path), "%s/%s", dirname, dentry->d_name);
        
        if (lstat(path, &statbuf) == -1) {
            perror(path);
            continue;
        }
        
        if (S_ISDIR(statbuf.st_mode)) {
            // 서브디렉터리인 경우
            long subdir_size = calculate_dir_size(path, show_subdirs);
            total_size += subdir_size;
            
            if (show_subdirs) {
                printf("%8ld\t%s\n", subdir_size / 1024, path);
            }
        } else {
            // 파일인 경우
            total_size += statbuf.st_blocks * 512;
        }
    }
    
    closedir(dp);
    return total_size;
}

int main(int argc, char *argv[]) {
    char *dirname = ".";
    long total_size;
    
    if (argc > 1) {
        dirname = argv[1];
    }
    
    total_size = calculate_dir_size(dirname, 1);
    printf("%8ld\t%s\n", total_size / 1024, dirname);
    
    return 0;
}
